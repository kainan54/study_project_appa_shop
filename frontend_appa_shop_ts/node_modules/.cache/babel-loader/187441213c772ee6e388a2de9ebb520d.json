{"ast":null,"code":"// intial state will updated with id\nconst INIT_STATE = {\n  currentUser: null\n};\n/* \n        User reducer handles state regarding user\n        action -> {\n            type: 'some string identifier',\n            payload: some data from component\n        }\n    */\n\nconst userReducer = function (prevState = INIT_STATE, action) {\n  switch (action.type) {\n    case 'SET_USER':\n      return { ...prevState,\n        currentUser: action.payload\n      };\n\n    default:\n      return prevState;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/kain/study_project_appa_shop/frontend_appa_shop_ts/src/redux/user/userReducer.ts"],"names":["INIT_STATE","currentUser","userReducer","prevState","action","type","payload"],"mappings":"AAAA;AACA,MAAMA,UAAU,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAaA,MAAMC,WAAW,GAAG,UAAUC,SAAS,GAAGH,UAAtB,EAAkCI,MAAlC,EAA6D;AAC7E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EACH,GAAGF,SADA;AAEHF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFjB,OAAP;;AAKJ;AACI,aAAOH,SAAP;AARR;AAUH,CAXD;;AAaA,eAAeD,WAAf","sourcesContent":["// intial state will updated with id\nconst INIT_STATE = {\n    currentUser: null,\n};\n\n/* \n        User reducer handles state regarding user\n        action -> {\n            type: 'some string identifier',\n            payload: some data from component\n        }\n    */\n\ninterface RootState {\n    currentUser: User | null;\n}\ninterface User {\n    email: string;\n    id: number;\n}\nexport interface Action {\n    type: string;\n    payload: User | null;\n}\nconst userReducer = function (prevState = INIT_STATE, action: Action): RootState {\n    switch (action.type) {\n        case 'SET_USER':\n            return {\n                ...prevState,\n                currentUser: action.payload,\n            };\n\n        default:\n            return prevState;\n    }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}