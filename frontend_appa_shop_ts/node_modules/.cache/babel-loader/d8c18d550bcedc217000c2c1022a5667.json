{"ast":null,"code":"class ShoppingCart {\n  addItem(currentCart, {\n    id,\n    name\n  }) {\n    if (!currentCart[id]) {\n      currentCart[id] = {\n        name: name,\n        qty: 1\n      };\n      return { ...currentCart\n      };\n    } else {\n      currentCart[id].qty += 1;\n      return { ...currentCart\n      };\n    }\n  }\n\n  removeItem(currentCart, id) {\n    delete currentCart[id];\n  }\n\n  mapToArray(callBack) {\n    const result = [];\n\n    for (const prop in this.items) {\n      result.push(callBack(this.items[prop]));\n    }\n\n    return result;\n  }\n\n}\n\nexport default ShoppingCart;","map":{"version":3,"sources":["/home/kain/study_project_appa_shop/frontend_appa_shop_ts/src/utils/ShoppingCart.ts"],"names":["ShoppingCart","addItem","currentCart","id","name","qty","removeItem","mapToArray","callBack","result","prop","items","push"],"mappings":"AAWA,MAAMA,YAAN,CAAmB;AACfC,EAAAA,OAAO,CAACC,WAAD,EAAoB;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAApB,EAAsD;AACzD,QAAI,CAACF,WAAW,CAACC,EAAD,CAAhB,EAAsB;AAClBD,MAAAA,WAAW,CAACC,EAAD,CAAX,GAAkB;AACdC,QAAAA,IAAI,EAAEA,IADQ;AAEdC,QAAAA,GAAG,EAAE;AAFS,OAAlB;AAKA,aAAO,EAAE,GAAGH;AAAL,OAAP;AACH,KAPD,MAOO;AACHA,MAAAA,WAAW,CAACC,EAAD,CAAX,CAAgBE,GAAhB,IAAuB,CAAvB;AACA,aAAO,EAAE,GAAGH;AAAL,OAAP;AACH;AACJ;;AAEDI,EAAAA,UAAU,CAACJ,WAAD,EAAoBC,EAApB,EAAsC;AAC5C,WAAOD,WAAW,CAACC,EAAD,CAAlB;AACH;;AAEDI,EAAAA,UAAU,CAACC,QAAD,EAA6D;AACnE,UAAMC,MAAsB,GAAG,EAA/B;;AACA,SAAK,MAAMC,IAAX,IAAmB,KAAKC,KAAxB,EAA+B;AAC3BF,MAAAA,MAAM,CAACG,IAAP,CAAYJ,QAAQ,CAAC,KAAKG,KAAL,CAAWD,IAAX,CAAD,CAApB;AACH;;AACD,WAAOD,MAAP;AACH;;AAzBc;;AA4BnB,eAAeT,YAAf","sourcesContent":["interface PersistedItem {\n    name: string;\n    qty: number;\n}\ninterface IncomingItem {\n    id: number;\n    name: string;\n}\ninterface Cart {\n    [id: number]: PersistedItem;\n}\nclass ShoppingCart {\n    addItem(currentCart: Cart, { id, name }: IncomingItem): Cart {\n        if (!currentCart[id]) {\n            currentCart[id] = {\n                name: name,\n                qty: 1,\n            };\n\n            return { ...currentCart };\n        } else {\n            currentCart[id].qty += 1;\n            return { ...currentCart };\n        }\n    }\n\n    removeItem(currentCart: Cart, id: number): Cart {\n        delete currentCart[id];\n    }\n\n    mapToArray(callBack: (item: PersistedItem) => unknown): Array<unknown> {\n        const result: Array<unknown> = [];\n        for (const prop in this.items) {\n            result.push(callBack(this.items[prop]));\n        }\n        return result;\n    }\n}\n\nexport default ShoppingCart;\n"]},"metadata":{},"sourceType":"module"}